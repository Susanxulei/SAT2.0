package Dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DBConnection {

    public static PreparedStatement perpareStmt(Connection conn,String sql)
    {
        PreparedStatement pstmt = null;
        try {
            pstmt = conn.prepareStatement(sql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return pstmt;

    }

    public static PreparedStatement perpareStmt(Connection conn,String sql,int autoGeneratedKeys)
    {
        PreparedStatement pstmt = null;
        try {
            pstmt = conn.prepareStatement(sql,autoGeneratedKeys);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return pstmt;

    }

    public static Connection getConn()
    {
        Connection conn=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/csair?"
                    + "user=root&password=&useUnicode=true&characterEncoding=UTF8");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return conn;
    }

    public static Statement createStmt(Connection conn)	{
        Statement stmt=null;
        try
        {
            stmt=conn.createStatement();
        }
        catch(SQLException e)
        {
            e.printStackTrace();
        }
        return stmt;
    }


    public static ResultSet executeQuery(Statement stmt,String sql)
    {
        ResultSet rs=null;
        try {
            rs=stmt.executeQuery(sql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return rs;
    }



    public static int executeUpdate(Connection conn,String sql)
    {
        int ret = 0;
        Statement stmt =null;
        try {
            stmt = conn.createStatement();
            ret=stmt.executeUpdate(sql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        finally
        {
            close(stmt);
        }
        return ret;
    }

    public static void close(Connection conn)
    {
        if(conn !=null)
        {
            try {
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
            conn=null;

        }
    }

    public static void close(Statement stmt)
    {
        if(stmt !=null)
        {
            try {
                stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
            stmt=null;

        }
    }

    public static void close(ResultSet rs)
    {
        if(rs !=null)
        {
            try {
                rs.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
            rs=null;

        }
    }

}